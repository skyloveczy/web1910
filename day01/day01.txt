版本控制管理工具
  集中式版本控制管理工具
    CVS,SVN
  分布式版本控制管理工具
    git


git最初是为了管理Linux的内核代码而诞生的


Linux的命令:
  1. ls,pwd,cd
    ls: list 列表,将当前文件夹的内容全部显示出来(非隐藏)
      Linux中隐藏文件通过文件夹名以 . 开头实现的
      ls -a  显示所有的(包括隐藏的内容)
      ls -lt 以列表的形式,按照时间顺序排序,展示所有非隐藏的文件或文件夹

    pwd: print working directory 打印当前工作路径

    cd: change directory 切换工作目录
      cd a   切换到当前目录下的a文件夹中 相当于 cd ./a
      cd ../a  切换到上一级目录下的a文件夹中
      如果路径错误或不存在,则报错
      如果cd后面是一个文件名,报错

      cd /a/b/c/d  ==> 使用绝对路径
      cd ~  :  ~表示当前登录用户的主目录
  2. 新建文件夹/目录
    mkdir 目录名
    make directory
    mkdir a   在当前路径下新建目录a,相当于 mkdir ./a
    mkdir如果名称已经存在,则报错

  3. 创建文件
    touch 文件名

    touch的文件名如果不存在,则创建一个新的文件
    如果存在,则不创建,而是修改该文件的最后访问时间

    touch 文件夹   修改文件夹的最后访问时间 

  4. 向文件中输入数据
    echo 数据 > 文件名  覆盖模式写入数据
    echo 数据 >> 文件名  追加模式写入数据
    如果文件不存在,自动创建一个文件,然后将数据写入

    vi 文件名  文本编辑命令
      使用该命令后会进入到命令模式,命令模式可以转换到输入模式或底行模式
        命令模式下按 a 或 i 进入输入模式,此时可以输入数据
        输入完成后,按ESC退出输入模式,重新进入命令模式

        命令模式下按 : 进入底行模式,输入wq回车,则退出vi界面
            :q   文件没有修改,直接退出
            :wq   保存并退出
            :q!  不保存,强制退出
            :w   保存,但不退出

  5. 查看文件内容
    cat 文件名
    catch

  6. 删除文件夹
    rmdir 文件夹名称
    remove directory
    只能删除空文件夹

  7. 删除文件
    rm 文件名

    删除非空文件夹
    rm -rf 非空文件夹


git命令:
  所有的git命令都是以git开头的

  1. 用户信息配置
    只需要配置一次,用于身份的识别
    git config --global user.name "用户名"
    git config --global user.email "邮箱"

  2. 初始化本地仓库
    git init
    进入到目标文件夹,使用该命令,则将当前文件夹初始化为本地仓库
    同时会自动生成一个.git的隐藏文件夹(版本库)

  3. 查看当前仓库的状态
    git status

    仓库的4种状态:
      unmodified: 未修改,工作区没有需要提交的内容
      modified: 工作区有内容被修改,需要提交
                没有执行过git add命令
      staged: 已经提交到了暂存区,但是还没有提交的master分支上
              执行过git add命令,还没有执行git commit命令
      untracked: 新建的文件,还没有纳入到git的控制中

  4. 提交内容
    1) 提交到暂存区
        git add 文件名

    2) 提交到master上
        git commit -m "提交信息"


    在桌面右击git bash,使用命令切换到D盘
    在d盘创建test2文件夹,将test2文件夹初始化为本地仓库
    查看仓库的状态 ---- 1
    新建文件1.txt
    查看状态 --- 2
    暂存1.txt
    查看状态 --- 3
    commit 1.txt
    查看状态----4
    =============
    新建2.txt
    查看状态 --- 5
    暂存2.txt 
    查看状态---6
    commit
    查看状态---7

  5. 查看提交记录
    git log
    git log --pretty=oneline


  6. 撤销修改
    1) 取消工作区的修改
      git checkout -- 文件名

    2) 取消暂存区的修改
      a) 先取消暂存操作
        git reset HEAD 文件名
      b) 取消工作区的修改
        git checkout -- 文件名

    3) 取消master上的修改
      无法取消的,只能使用版本回退
      首先使用git log查看回退到哪个版本,找到其对应的提交的id
      然后使用git reset --hard 提交id






- rwx r-x r-x 
-代表文件
d代表文件夹/目录 directory

rwx ==> read  write  execute

文件类型   文件所有者  同组成员  其他人
  -/d       rwx       r-x      ---